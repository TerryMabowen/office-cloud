server.servlet.session.persistent=true
server.servlet.session.timeout=PT2H
server.port=8094
server.address=127.0.0.1

#druid连接池
spring.datasource.druid.db-type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/db_office_cloud_oc?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.druid.url=jdbc:mysql://s.legotown.cn:13306/?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.druid.username=root
#spring.datasource.druid.password=root
spring.datasource.druid.password=qwerASDF1234?
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.initial-size=0
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-wait=60000
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
spring.datasource.druid.filter.stat.merge-sql=true

# create 第一次建表用create，后面使用update
# update 没有表创建，只有更新
# 不然每次重新系统工程都会先删除表再新建
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

#cacheType
spring.cache.type=redis
#redis
spring.redis.host=127.0.0.1
spring.redis.port=6379

#thymeleaf
#开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false

#配置文件上传的最大值
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

#dubbo
dubbo.application.name=office-cloud-blog-dubbo-start
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.provider.threads=10
dubbo.provider.threadpool=fixed
dubbo.provider.loadbalance=roundrobin

